{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["export type HttpResponse<T extends object> = {\n  data: T;\n  config: RequestInit;\n  headers: Headers;\n  ok: boolean;\n  redirected: boolean;\n  status: number;\n  statusText: string;\n  type: ResponseType;\n  url: string;\n};\n\ntype Interceptor = {\n  onRequest: (config: RequestInit) => RequestInit;\n  onResponse: <T extends object>(response: HttpResponse<T>) => HttpResponse<T> | PromiseLike<HttpResponse<T>>;\n  onRequestError: (reason: unknown) => Promise<never>;\n  onResponseError: (reason: unknown) => Promise<never>;\n};\n\nconst processHttpResponse = async <T extends object>(response: Response, config: RequestInit) => {\n  const data = (await response.json().catch(() => ({}))) as T;\n  const { headers, ok, redirected, status, statusText, type, url } = response;\n  return { data, config, headers, ok, redirected, status, statusText, type, url };\n};\n\nconst createHttp = (baseURL = \"\", defaultConfig: RequestInit = {}) => {\n  let interceptor: Interceptor = {\n    onRequest: (config) => config,\n    onResponse: (response) => response,\n    onRequestError: (reason) => Promise.reject(reason),\n    onResponseError: (reason) => Promise.reject(reason),\n  };\n\n  const request = async <T extends object = object>(url: string, config: RequestInit) => {\n    if (!url.startsWith(\"http\")) {\n      url = `${baseURL}${url}`;\n    }\n\n    config = { ...defaultConfig, ...interceptor.onRequest(config) };\n    config.headers = { ...defaultConfig.headers, ...config.headers };\n\n    try {\n      const response = await fetch(url, config);\n      return processHttpResponse<T>(response, config).then(interceptor.onResponse).catch(interceptor.onResponseError);\n    } catch (reason) {\n      return interceptor.onRequestError(reason);\n    }\n  };\n\n  return {\n    request,\n    get: <T extends object>(url: string, config: RequestInit = {}) =>\n      request<T>(url, {\n        ...config,\n        method: \"GET\",\n      }),\n    post: <T extends object>(url: string, config: RequestInit = {}) =>\n      request<T>(url, {\n        ...config,\n        method: \"POST\",\n      }),\n    patch: <T extends object>(url: string, config: RequestInit = {}) =>\n      request<T>(url, {\n        ...config,\n        method: \"PATCH\",\n      }),\n    put: <T extends object>(url: string, config: RequestInit = {}) =>\n      request<T>(url, {\n        ...config,\n        method: \"PUT\",\n      }),\n    delete: <T extends object>(url: string, config: RequestInit = {}) =>\n      request<T>(url, {\n        ...config,\n        method: \"DELETE\",\n      }),\n    registerInterceptor: (customInterceptor: Partial<Interceptor>) => {\n      interceptor = {\n        ...interceptor,\n        ...customInterceptor,\n      };\n    },\n  };\n};\n\nexport default createHttp;\n"],
  "mappings": ";AAmBA,IAAM,sBAAsB,OAAyB,UAAoB,WAAwB;AAC/F,QAAM,OAAQ,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACpD,QAAM,EAAE,SAAS,IAAI,YAAY,QAAQ,YAAY,MAAM,IAAI,IAAI;AACnE,SAAO,EAAE,MAAM,QAAQ,SAAS,IAAI,YAAY,QAAQ,YAAY,MAAM,IAAI;AAChF;AAEA,IAAM,aAAa,CAAC,UAAU,IAAI,gBAA6B,CAAC,MAAM;AACpE,MAAI,cAA2B;AAAA,IAC7B,WAAW,CAAC,WAAW;AAAA,IACvB,YAAY,CAAC,aAAa;AAAA,IAC1B,gBAAgB,CAAC,WAAW,QAAQ,OAAO,MAAM;AAAA,IACjD,iBAAiB,CAAC,WAAW,QAAQ,OAAO,MAAM;AAAA,EACpD;AAEA,QAAM,UAAU,OAAkC,KAAa,WAAwB;AACrF,QAAI,CAAC,IAAI,WAAW,MAAM,GAAG;AAC3B,YAAM,GAAG,OAAO,GAAG,GAAG;AAAA,IACxB;AAEA,aAAS,EAAE,GAAG,eAAe,GAAG,YAAY,UAAU,MAAM,EAAE;AAC9D,WAAO,UAAU,EAAE,GAAG,cAAc,SAAS,GAAG,OAAO,QAAQ;AAE/D,QAAI;AACF,YAAM,WAAW,MAAM,MAAM,KAAK,MAAM;AACxC,aAAO,oBAAuB,UAAU,MAAM,EAAE,KAAK,YAAY,UAAU,EAAE,MAAM,YAAY,eAAe;AAAA,IAChH,SAAS,QAAQ;AACf,aAAO,YAAY,eAAe,MAAM;AAAA,IAC1C;AAAA,EACF;AAEA,SAAO;AAAA,IACL;AAAA,IACA,KAAK,CAAmB,KAAa,SAAsB,CAAC,MAC1D,QAAW,KAAK;AAAA,MACd,GAAG;AAAA,MACH,QAAQ;AAAA,IACV,CAAC;AAAA,IACH,MAAM,CAAmB,KAAa,SAAsB,CAAC,MAC3D,QAAW,KAAK;AAAA,MACd,GAAG;AAAA,MACH,QAAQ;AAAA,IACV,CAAC;AAAA,IACH,OAAO,CAAmB,KAAa,SAAsB,CAAC,MAC5D,QAAW,KAAK;AAAA,MACd,GAAG;AAAA,MACH,QAAQ;AAAA,IACV,CAAC;AAAA,IACH,KAAK,CAAmB,KAAa,SAAsB,CAAC,MAC1D,QAAW,KAAK;AAAA,MACd,GAAG;AAAA,MACH,QAAQ;AAAA,IACV,CAAC;AAAA,IACH,QAAQ,CAAmB,KAAa,SAAsB,CAAC,MAC7D,QAAW,KAAK;AAAA,MACd,GAAG;AAAA,MACH,QAAQ;AAAA,IACV,CAAC;AAAA,IACH,qBAAqB,CAAC,sBAA4C;AAChE,oBAAc;AAAA,QACZ,GAAG;AAAA,QACH,GAAG;AAAA,MACL;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,cAAQ;",
  "names": []
}
